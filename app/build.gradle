apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "com.akhbulatov.discusim"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "BASE_URL", "\"https://disqus.com/\""
        buildConfigField "String", "BASE_API_URL", "\"https://disqus.com/api/3.0/\""

        buildConfigField "String", "CLIENT_ID", "\"QC6s13EPF1vkzhein4WRpxqVr91zlNoVnLH6ImSa7UPBK5I0T7WKPCtZMYd9IC1l\""
        buildConfigField "String", "CLIENT_SECRET", "\"HKdJ6pvWjzqrAIaMvy70hXmIhUeBcMrVgjA9VClGArZgTu8XLx2iLyFwVYpAv0Dv\""
        buildConfigField "String", "REDIRECT_URI", "\"http://www.example.com/oauth_redirect\""
        buildConfigField "String", "OAUTH_SCOPE", "\"read,write\""
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"

    // UI
    implementation "com.google.android.material:material:${versions.material}"
    implementation "androidx.appcompat:appcompat:${versions.appCompat}"
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerView}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.archLifecycle}"

    // DI
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

    // Rx
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxJava}"
    implementation "io.reactivex.rxjava2:rxkotlin:${versions.rxKotlin}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}"
    implementation "com.jakewharton.rxrelay2:rxrelay:${versions.rxRelay}"

    // Network
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"

    // JSON
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"

    // Navigation
    implementation "ru.terrakok.cicerone:cicerone:${versions.cicerone}"

    // Image Loading
    implementation "com.github.bumptech.glide:glide:${versions.glide}"

    // Date & Time
    implementation "com.jakewharton.threetenabp:threetenabp:${versions.threeTenAbp}"

    // Extensions
    implementation "androidx.core:core-ktx:${versions.androidKtx}"
    implementation "org.jetbrains.anko:anko-commons:${versions.anko}"
    implementation "org.jetbrains.anko:anko-support-v4-commons:${versions.anko}"

    // Dev Tools
    implementation "com.jakewharton.timber:timber:${versions.timber}"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakCanary}"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:${versions.leakCanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakCanary}"
}
